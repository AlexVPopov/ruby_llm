name: Deploy docs

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'lib/tasks/models_docs.rake'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby for models guide generation (root Gemfile)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Run models:docs rake task
        run: bundle exec rake models:docs

      - name: Cache APT packages
        uses: actions/cache@v4
        id: cache-apt
        with:
          path: ~/apt-cache
          key: ${{ runner.os }}-apt-libvips-fonts-v3
          restore-keys: |
            ${{ runner.os }}-apt-libvips-fonts-

      - name: Install libvips for jekyll-og-image
        run: |
          if [ "${{ steps.cache-apt.outputs.cache-hit }}" != "true" ]; then
            echo "Installing libvips..."
            sudo apt-get update -qq
            sudo apt-get install -y --no-install-recommends libvips-dev
            # Save state for cache
            mkdir -p ~/apt-cache
            dpkg -l | grep libvips > ~/apt-cache/packages.txt
          else
            echo "Using cached libvips"
            sudo apt-get update -qq
            sudo apt-get install -y --no-install-recommends libvips-dev
          fi

      - name: Cache fonts
        uses: actions/cache@v4
        id: cache-fonts
        with:
          path: |
            /usr/share/fonts/truetype/plus-jakarta-sans
            ~/.cache/fontconfig
          key: ${{ runner.os }}-fonts-v2
          restore-keys: |
            ${{ runner.os }}-fonts-

      - name: Install fonts for OG image generation
        run: |
          # Always install Inter from apt (fast)
          sudo apt-get install -y fonts-inter fonts-inter-variable
          if [ "${{ steps.cache-fonts.outputs.cache-hit }}" != "true" ]; then
            echo "Installing Plus Jakarta Sans..."
            wget -q https://github.com/tokotype/PlusJakartaSans/archive/refs/heads/master.zip -O PlusJakartaSans.zip
            unzip -q PlusJakartaSans.zip
            sudo mkdir -p /usr/share/fonts/truetype/plus-jakarta-sans
            sudo cp PlusJakartaSans-master/fonts/ttf/*.ttf /usr/share/fonts/truetype/plus-jakarta-sans/
            rm -rf PlusJakartaSans.zip PlusJakartaSans-master
          else
            echo "Plus Jakarta Sans cached"
          fi
          # Always update font cache
          sudo fc-cache -fv
          # Verify fonts are installed
          echo "Verifying fonts:"
          fc-list | grep -i inter || echo "Inter font not found"
          fc-list | grep -i jakarta || echo "Plus Jakarta Sans not found"

      - name: Setup Ruby for Jekyll build (docs Gemfile)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        working-directory: docs
        run: |
          echo "Ruby version: $(ruby -v)"
          echo "Gem environment:"
          gem env
          echo "Installed gems related to vips:"
          gem list | grep -i vips || echo "No vips gems found"
          echo "System vips:"
          pkg-config --modversion vips || echo "vips not found via pkg-config"
          echo "Building Jekyll site..."
          bundle exec jekyll build --verbose --trace --baseurl "${{ steps.pages.outputs.base_path }}" 2>&1
        env:
          JEKYLL_ENV: production

      - name: Check OG images
        working-directory: docs
        run: |
          echo "Checking if OG images were generated..."
          if [ -d "_site/assets/images/og" ]; then
            echo "OG images directory exists"
            echo "Number of OG images: $(find _site/assets/images/og -name "*.png" | wc -l)"
            ls -la _site/assets/images/og/ | head -20
          else
            echo "WARNING: OG images directory does not exist!"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4